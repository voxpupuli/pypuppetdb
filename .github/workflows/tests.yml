name: tests (unit)

on:
  pull_request: {}
  push:
    branches:
      - master
      - main

permissions:
  contents: read

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      max-parallel: 5
      matrix:
        python-version: [3.9, '3.10', 3.11, 3.12, 3.13]

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt install python3-poetry
          poetry install --with test
          poetry run mypy --install-types --non-interactive pypuppetdb/ tests/
      - name: Test
        run: |
          poetry run pytest --cov=. --cov-report=xml --flake8 --strict-markers --mypy pypuppetdb tests
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: false
      - name: Build
        run: |
          poetry build -v

  black-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Black Code Formatter
        uses: psf/black@stable

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          sudo apt install python3-poetry
          poetry install --with test
      - name: Run bandit
        run: |
          poetry run bandit -r pypuppetdb

  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install dependencies
        run: |
          sudo apt install python3-poetry
          poetry install --with docs
      - name: Build docs
        run: |
          cd docs
          poetry run make html
  tests:
    needs:
      - test
      - black-formatting
      - security
      - build-docs
    runs-on: ubuntu-latest
    name: Test suite
    steps:
      - run: echo Test suite completed
